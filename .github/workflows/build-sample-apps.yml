name: Build sample apps 

on: 
  pull_request: # build sample apps for every commit pushed to an open pull request (including drafts)
  push: 
    branches: [main]
  release: # build sample apps for every git tag created. These are known as "stable" builds that are suitable for people outside the mobile team. 
    types: [published]

concurrency: # cancel previous workflow run if one exists. 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-pr-comment:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # to be able to comment on PR
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id }}
    steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: existing-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: <!-- sample app builds --> 
    
    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v3
      id: create-comment
      with:
        comment-id: ${{ steps.existing-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          <!-- sample app builds --> 
          # Sample app builds ðŸ“±
          
          Below you will find the list of the latest versions of the sample apps. It's recommended to always download the latest builds of the sample apps to accurately test the pull request. 

          ---
          ${{ steps.build.outputs.build-log }}
        edit-mode: replace # replace the existing comment with new content since we are creating new builds 
  
  build-ios-sample-apps:
    runs-on: macos-13
    name: Building iOS app...${{ matrix.sample-app }}
    if: ${{ always() }} # do not skip running this step if update-pr-comment does not run 
    needs: [update-pr-comment] # wait for PR comment to be created saying new builds are being made. 
    permissions:
      pull-requests: write # comment on pull request with build information 
    strategy:
      fail-fast: false # if one sample app fails to build, let the other sample apps continue to build and not cancel them. 
      matrix: # Use a matrix allowing us to build multiple apps in parallel. Just add an entry to the matrix and it will build! 
        sample-app: 
        # List all sample apps you want to have compiled. 
        # List item is name of directory inside of "apps" directory for the corresponding app to compile. 
        - "Typescript-ObjC"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Xcode to version we determine 
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 14

    - name: Install CLI tools used in CI script 
      run: |
        brew install sd # used in CI script as an easier to use sed CLI. Replaces text in files. 
        brew install xcbeautify # used by fastlane for output 

    - name: Install tools from Gemfile (ruby language) used for building our apps with 
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true # cache tools to make builds faster in future

    - name: npm install 
      run: yarn install --frozen-lockfile
      working-directory: "apps/${{ matrix.sample-app }}"

    - name: pod install       
      run: pod install --project-directory=ios
      working-directory: "apps/${{ matrix.sample-app }}"

    # use library such as: https://github.com/luggit/react-native-config 
    # to reference .env values in react native app. works for Android and iOS. 
    - name: Setup Customer.io workspace credentials to compile into app 
      run: |
        touch "apps/${{ matrix.sample-app }}/.env"
        echo "CUSTOMERIO_WORKSPACE_SITE_ID=${{ secrets.CUSTOMERIO_WORKSPACE_SITE_ID }}" >> "apps/${{ matrix.sample-app }}/.env"
        echo "CUSTOMERIO_WORKSPACE_API_KEY=${{ secrets.CUSTOMERIO_WORKSPACE_API_KEY }}" >> "apps/${{ matrix.sample-app }}/.env"

    - name: Build app via Fastlane 
      uses: maierj/fastlane-action@v3.0.0
      with:
        lane: "build"
        subdirectory: "apps/${{ matrix.sample-app }}/ios"
      env: 
        GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64: ${{ secrets.GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64 }}
        FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64: ${{ secrets.FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64 }}

    - name: Update sample builds PR comment with build information 
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        # the variables APP_BUILD_NUMBER, APP_VERSION_STRING are created when fastlane runs "build". 
        body: |
          * ${{ matrix.sample-app }}: `${{ env.APP_VERSION_STRING }} (${{ env.APP_BUILD_NUMBER }})`
        edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds. 

    - name: Update sample builds PR comment with build failure message 
      if: ${{ failure() }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          * ${{ matrix.sample-app }}: Build failed. See [CI job logs](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) to determine the issue and try re-building. 
        edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds. 

  build-android-sample-apps:
    runs-on: ubuntu-latest
    name: Building Android app...${{ matrix.sample-app }}
    if: ${{ always() }} # do not skip running this step if update-pr-comment does not run 
    needs: [update-pr-comment] # wait for PR comment to be created saying new builds are being made. 
    permissions:
      pull-requests: write # comment on pull request with build information 
    strategy:
      fail-fast: false # if one sample app fails to build, let the other sample apps continue to build and not cancel them. 
      matrix: # Use a matrix allowing us to build multiple apps in parallel. Just add an entry to the matrix and it will build! 
        sample-app: 
        # List all sample apps you want to have compiled. 
        # List item is name of directory inside of "apps" directory for the corresponding app to compile. 
        - "Typescript-ObjC"
    steps:
    - uses: actions/checkout@v3 

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2 

    - name: Install tools from Gemfile (ruby language) used for building our apps with 
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true # cache tools to make builds faster in future 

    # use library such as: https://github.com/luggit/react-native-config 
    # to reference .env values in react native app. works for Android and iOS. 
    - name: Setup Customer.io workspace credentials to compile into app 
      run: |
        touch "apps/${{ matrix.sample-app }}/.env"
        echo "CUSTOMERIO_WORKSPACE_SITE_ID=${{ secrets.CUSTOMERIO_WORKSPACE_SITE_ID }}" >> "apps/${{ matrix.sample-app }}/.env"
        echo "CUSTOMERIO_WORKSPACE_API_KEY=${{ secrets.CUSTOMERIO_WORKSPACE_API_KEY }}" >> "apps/${{ matrix.sample-app }}/.env"        
    
    - name: Verify gradle scripts are not modified 
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle and cache dependencies between builds 
      uses: gradle/gradle-build-action@v2
    
    - name: Deploy development build via Fastlane
      uses: maierj/fastlane-action@v3.0.0
      with:
        lane: 'android build'
        subdirectory: "apps/${{ matrix.sample-app }}/android"
      env:
        FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64: ${{ secrets.FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64 }}
